name: Deploy Java Application to EC2

on:
  push:
    branches:
      - main # or the branch you use for deployments

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '8'             # Specify the version here
        distribution: 'corretto'      # Specify the distribution here
        java-package: 'jdk'           # Use 'jdk' for the full JDK or 'jre' for the JRE
        check-latest: false           # Set to true to get the latest version
        overwrite-settings: true      # Whether to overwrite settings if Java is already installed
        job-status: success           # Status of the job (success or failure)
        token: ${{ secrets.ACCESS_TOKEN }} 

    - name: Build with Maven
      run: mvn clean install

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-artifact
        path: target/*.jar # specify the path to your JAR file

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        # Define the path to the private key file
        PRIVATE_KEY_FILE="$HOME/.ssh/id_rsa"
          
        # Create the SSH key file and set permissions
        mkdir -p "$HOME/.ssh"
        echo "$PRIVATE_KEY" > "$PRIVATE_KEY_FILE"
        chmod 600 "$PRIVATE_KEY_FILE"
          
        # Create the deployment directory
        mkdir -p $HOME/deploy
          
        # Download the artifact from S3
        aws s3 cp s3://geostore-bucket/app-artifact.jar $HOME/deploy/app-artifact.jar
          
        # SSH into the EC2 instance and perform deployment
        ssh -i "$PRIVATE_KEY_FILE" -o StrictHostKeyChecking=no $USER@$HOST << EOF
        echo "Starting deployment..."
            
        # Stop Jetty server
        sudo systemctl stop jetty || { echo 'Failed to stop Jetty'; exit 1; }
            
        # Backup current application
        sudo cp /opt/jetty-base/webapps/ROOT.war /opt/jetty-base/webapps/ROOT.war.bak || { echo 'Failed to backup current application'; exit 1; }
            
        # Deploy the new application
        sudo cp ~/deploy/app-artifact.jar /opt/jetty-base/webapps/ROOT.war || { echo 'Failed to deploy new application'; exit 1; }
            
        # Restart Jetty server
        sudo systemctl start jetty || { echo 'Failed to start Jetty'; exit 1; }
            
        # Validate service (optional)
        curl -f http://localhost:8080/geostore/rest || { echo 'Service validation failed'; exit 1; }
            
        echo "Deployment complete."
        EOF
      